@model IEnumerable<GestionRRHH.Web.Models.Entities.Empleado>

@{
    ViewData["Title"] = "Empleados";
    var totalEmpleados = Model.Count();
    var empleadosActivos = Model.Count(e => e.Estado == "activo");
    var empleadosInactivos = Model.Count(e => e.Estado == "inactivo");
}

@if (TempData["Success"] != null)
{
    <div class="mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
        @TempData["Success"]
    </div>
}

<!-- Header y Métricas -->
<div class="mb-6">
    <div class="flex justify-between items-center mb-6">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Gestión de Empleados</h1>
            <p class="text-gray-600">Administra la información del personal</p>
        </div>
        <a asp-action="Create" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition duration-200">
            <i class="fas fa-plus mr-2"></i>Agregar Empleado
        </a>
    </div>

    <!-- Métricas Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
        <div class="bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl p-6 text-white">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-blue-100 text-sm">Total de Empleados</p>
                    <p class="text-3xl font-bold">@totalEmpleados</p>
                </div>
                <div class="bg-white bg-opacity-20 rounded-lg p-3">
                    <i class="fas fa-users text-2xl"></i>
                </div>
            </div>
        </div>

        <div class="bg-gradient-to-r from-green-500 to-green-600 rounded-xl p-6 text-white">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-green-100 text-sm">Empleados Activos</p>
                    <p class="text-3xl font-bold">@empleadosActivos</p>
                </div>
                <div class="bg-white bg-opacity-20 rounded-lg p-3">
                    <i class="fas fa-user-check text-2xl"></i>
                </div>
            </div>
        </div>

        <div class="bg-gradient-to-r from-red-500 to-red-600 rounded-xl p-6 text-white">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-red-100 text-sm">Empleados Inactivos</p>
                    <p class="text-3xl font-bold">@empleadosInactivos</p>
                </div>
                <div class="bg-white bg-opacity-20 rounded-lg p-3">
                    <i class="fas fa-user-times text-2xl"></i>
                </div>
            </div>
        </div>

        <div class="bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl p-6 text-white">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-purple-100 text-sm">Departamentos</p>
                    <p class="text-3xl font-bold">@Model.Select(e => e.DepartamentoId).Distinct().Count()</p>
                </div>
                <div class="bg-white bg-opacity-20 rounded-lg p-3">
                    <i class="fas fa-building text-2xl"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filtros -->
<div class="bg-white rounded-lg shadow mb-6 p-6">
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Estado</label>
            <select id="filtroEstado" class="block w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">Todos los estados</option>
                <option value="activo">Activos</option>
                <option value="inactivo">Inactivos</option>
            </select>
        </div>
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Buscar Nombre</label>
            <input type="text" id="filtroNombre" placeholder="Buscar empleado..." class="block w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
        </div>
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Departamento</label>
            <select id="filtroDepartamento" class="block w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">Todos los departamentos</option>
                @foreach (var dept in Model.Select(e => e.Departamento?.Nombre).Distinct().Where(d => d != null))
                {
                    <option value="@dept">@dept</option>
                }
            </select>
        </div>
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Tipo de Nómina</label>
            <select id="filtroNomina" class="block w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">Todos los tipos</option>
                <option value="mensual">Mensual</option>
                <option value="quincenal">Quincenal</option>
                <option value="semanal">Semanal</option>
            </select>
        </div>
    </div>
</div>

<!-- Tabla -->
<div class="bg-white rounded-lg shadow">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200" id="tablaEmpleados">
            <thead class="bg-gray-50">
            <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Empleado</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Contacto</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha Contratación</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Puesto</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Departamento</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Salario</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nómina</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
            </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
            @foreach (var empleado in Model)
            {
                <tr class="hover:bg-gray-50 empleado-row"
                    data-estado="@empleado.Estado"
                    data-nombre="@empleado.NombreCompleto.ToLower()"
                    data-departamento="@empleado.Departamento?.Nombre"
                    data-nomina="@empleado.TipoNomina">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                                    <span class="text-white font-semibold text-lg">
                                        @(empleado.NombreCompleto.Split(' ').FirstOrDefault()?.Substring(0, 1))@(empleado.NombreCompleto.Split(' ').Skip(1).FirstOrDefault()?.Substring(0, 1))
                                    </span>
                            </div>
                            <div class="ml-4">
                                <div class="text-sm font-medium text-gray-900">@empleado.NombreCompleto</div>
                                <div class="text-sm text-gray-500">ID: @empleado.Id.ToString().PadLeft(8, '0')</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">@empleado.Telefono</div>
                        <div class="text-sm text-gray-500">@empleado.Email</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">@empleado.FechaContratacion.ToString("dd/MM/yyyy")</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">@empleado.Puesto?.Nombre</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">@empleado.Departamento?.Nombre</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm font-semibold text-gray-900">@empleado.SalarioBase.ToString("C")</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium 
                                  @(empleado.TipoNomina == "mensual" ? "bg-blue-100 text-blue-800" :
                                                                           empleado.TipoNomina == "quincenal" ? "bg-green-100 text-green-800" :
                                                                           "bg-yellow-100 text-yellow-800")">
                                @empleado.TipoNomina.ToUpper()
                            </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        @if (empleado.Estado == "activo")
                        {
                            <span class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">
                                    <span class="text-white font-bold text-sm">A</span>
                                </span>
                        }
                        else
                        {
                            <span class="w-8 h-8 bg-red-500 rounded-full flex items-center justify-center">
                                    <span class="text-white font-bold text-sm">I</span>
                                </span>
                        }
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="flex space-x-2">
                            <a asp-action="Edit" asp-route-id="@empleado.Id" class="text-blue-600 hover:text-blue-900">
                                <i class="fas fa-edit"></i>
                            </a>
                            @if (empleado.Estado == "activo")
                            {
                                <form asp-action="Delete" asp-route-id="@empleado.Id" method="post" class="inline" onsubmit="return confirm('¿Desactivar empleado?')">
                                    <button type="submit" class="text-red-600 hover:text-red-900">
                                        <i class="fas fa-user-times"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        // Filtros en tiempo real
        document.getElementById('filtroEstado').addEventListener('change', filtrarTabla);
        document.getElementById('filtroNombre').addEventListener('input', filtrarTabla);
        document.getElementById('filtroDepartamento').addEventListener('change', filtrarTabla);
        document.getElementById('filtroNomina').addEventListener('change', filtrarTabla);

        function filtrarTabla() {
            const filtroEstado = document.getElementById('filtroEstado').value.toLowerCase();
            const filtroNombre = document.getElementById('filtroNombre').value.toLowerCase();
            const filtroDepartamento = document.getElementById('filtroDepartamento').value;
            const filtroNomina = document.getElementById('filtroNomina').value;

            const filas = document.querySelectorAll('.empleado-row');

            filas.forEach(fila => {
                const estado = fila.dataset.estado;
                const nombre = fila.dataset.nombre;
                const departamento = fila.dataset.departamento;
                const nomina = fila.dataset.nomina;

                const mostrar =
                    (filtroEstado === '' || estado === filtroEstado) &&
                    (filtroNombre === '' || nombre.includes(filtroNombre)) &&
                    (filtroDepartamento === '' || departamento === filtroDepartamento) &&
                    (filtroNomina === '' || nomina === filtroNomina);

                fila.style.display = mostrar ? '' : 'none';
            });
        }
    </script>
}