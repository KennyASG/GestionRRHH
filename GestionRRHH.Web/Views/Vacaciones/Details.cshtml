@model GestionRRHH.Web.Models.Entities.Vacacione

@{
    ViewData["Title"] = "Detalles de Vacaciones";
    var diasTranscurridos = (DateTime.Now.Date - Model.FechaInicio.ToDateTime(TimeOnly.MinValue)).Days;
    var enPeriodoVacaciones = DateTime.Now.Date >= Model.FechaInicio.ToDateTime(TimeOnly.MinValue) &&
                              DateTime.Now.Date <= Model.FechaFin.ToDateTime(TimeOnly.MinValue);
}

@if (TempData["Success"] != null)
{
    <div class="mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
        @TempData["Success"]
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
        @TempData["Error"]
    </div>
}

<div class="bg-white rounded-lg shadow">
    <!-- Header -->
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-start">
            <div>
                <h3 class="text-lg font-medium text-gray-900">Detalles de Vacaciones</h3>
                <p class="text-sm text-gray-500 mt-1">Solicitud #@Model.Id.ToString().PadLeft(6, '0')</p>
            </div>
            <div class="flex space-x-3">
                @if (Model.Estado == "solicitada")
                {
                    <form asp-action="Aprobar" asp-route-id="@Model.Id" method="post" class="inline" onsubmit="return confirm('¿Aprobar esta solicitud de vacaciones?')">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition duration-200">
                            <i class="fas fa-check mr-2"></i>Aprobar
                        </button>
                    </form>
                    <button onclick="mostrarModalRechazo()" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition duration-200">
                        <i class="fas fa-times mr-2"></i>Rechazar
                    </button>
                }
                <a asp-action="Index" class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition duration-200">
                    <i class="fas fa-arrow-left mr-2"></i>Volver
                </a>
            </div>
        </div>
    </div>

    <div class="p-6">
        <!-- Estado de la Solicitud -->
        <div class="mb-6">
            @if (Model.Estado == "aprobada")
            {
                <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                    <div class="flex items-center">
                        <i class="fas fa-check-circle text-green-600 text-2xl mr-3"></i>
                        <div>
                            <h4 class="text-green-900 font-medium">Vacaciones Aprobadas</h4>
                            <p class="text-green-700 text-sm">Esta solicitud ha sido aprobada y está lista para ser disfrutada.</p>
                            @if (enPeriodoVacaciones)
                            {
                                <p class="text-green-600 text-sm font-medium mt-1">
                                    <i class="fas fa-calendar-check mr-1"></i>El empleado está actualmente de vacaciones
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            else if (Model.Estado == "solicitada")
            {
                <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                    <div class="flex items-center">
                        <i class="fas fa-hourglass-half text-yellow-600 text-2xl mr-3"></i>
                        <div>
                            <h4 class="text-yellow-900 font-medium">Pendiente de Aprobación</h4>
                            <p class="text-yellow-700 text-sm">Esta solicitud está pendiente de revisión y aprobación.</p>
                        </div>
                    </div>
                </div>
            }
            else if (Model.Estado == "pagada")
            {
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div class="flex items-center">
                        <i class="fas fa-money-check-alt text-blue-600 text-2xl mr-3"></i>
                        <div>
                            <h4 class="text-blue-900 font-medium">Vacaciones Pagadas</h4>
                            <p class="text-blue-700 text-sm">Las vacaciones han sido disfrutadas y el pago ha sido procesado.</p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                    <div class="flex items-center">
                        <i class="fas fa-times-circle text-red-600 text-2xl mr-3"></i>
                        <div>
                            <h4 class="text-red-900 font-medium">Solicitud Rechazada</h4>
                            <p class="text-red-700 text-sm">Esta solicitud ha sido rechazada.</p>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <!-- Información del Empleado -->
            <div class="bg-gray-50 rounded-lg p-6">
                <h4 class="text-lg font-medium text-gray-900 mb-4">
                    <i class="fas fa-user mr-2"></i>Información del Empleado
                </h4>

                <div class="flex items-center mb-4">
                    <div class="w-16 h-16 bg-gradient-to-r from-green-500 to-blue-600 rounded-full flex items-center justify-center">
                        <span class="text-white font-bold text-xl">
                            @(Model.IdEmpleadoNavigation.NombreCompleto.Split(' ').FirstOrDefault()?.Substring(0, 1))@(Model.IdEmpleadoNavigation.NombreCompleto.Split(' ').Skip(1).FirstOrDefault()?.Substring(0, 1))
                        </span>
                    </div>
                    <div class="ml-4">
                        <h5 class="text-lg font-medium text-gray-900">@Model.IdEmpleadoNavigation.NombreCompleto</h5>
                        <p class="text-sm text-gray-600">ID: @Model.IdEmpleadoNavigation.Id.ToString().PadLeft(8, '0')</p>
                    </div>
                </div>

                <div class="space-y-3">
                    <div class="flex justify-between">
                        <span class="text-sm font-medium text-gray-600">Departamento:</span>
                        <span class="text-sm text-gray-900">@Model.IdEmpleadoNavigation.Departamento?.Nombre</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-sm font-medium text-gray-600">Puesto:</span>
                        <span class="text-sm text-gray-900">@Model.IdEmpleadoNavigation.Puesto?.Nombre</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-sm font-medium text-gray-600">Fecha Contratación:</span>
                        <span class="text-sm text-gray-900">@Model.IdEmpleadoNavigation.FechaContratacion.ToString("dd/MM/yyyy")</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-sm font-medium text-gray-600">Antigüedad:</span>
                        <span class="text-sm text-gray-900">@((DateTime.Now.Year - Model.IdEmpleadoNavigation.FechaContratacion.Year)) años</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-sm font-medium text-gray-600">Salario Base:</span>
                        <span class="text-sm text-gray-900">@Model.IdEmpleadoNavigation.SalarioBase.ToString("C")</span>
                    </div>
                </div>
            </div>

            <!-- Detalles de las Vacaciones -->
            <div class="bg-gray-50 rounded-lg p-6">
                <h4 class="text-lg font-medium text-gray-900 mb-4">
                    <i class="fas fa-umbrella-beach mr-2"></i>Detalles de las Vacaciones
                </h4>

                <div class="space-y-4">
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <span class="text-sm font-medium text-gray-600">Fecha de Inicio</span>
                            <p class="text-lg font-semibold text-gray-900">@Model.FechaInicio.ToString("dd/MM/yyyy")</p>
                            <p class="text-xs text-gray-500">@Model.FechaInicio.ToString("dddd")</p>
                        </div>
                        <div>
                            <span class="text-sm font-medium text-gray-600">Fecha de Fin</span>
                            <p class="text-lg font-semibold text-gray-900">@Model.FechaFin.ToString("dd/MM/yyyy")</p>
                            <p class="text-xs text-gray-500">@Model.FechaFin.ToString("dddd")</p>
                        </div>
                    </div>

                    <div class="border-t pt-4">
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm font-medium text-gray-600">Días de Vacaciones:</span>
                            <span class="text-xl font-bold text-blue-600">@Model.DiasTomados días</span>
                        </div>
                    </div>

                    @if ((Model.PromedioBonosExtras ?? 0) > 0)
                    {
                        <div class="border-t pt-4">
                            <div class="flex justify-between">
                                <span class="text-sm font-medium text-gray-600">Promedio Bonos/Extras:</span>
                                <span class="text-sm text-gray-900">@((Model.PromedioBonosExtras ?? 0).ToString("C"))</span>
                            </div>
                            <p class="text-xs text-gray-500 mt-1">Promedio de últimos 6 meses</p>
                        </div>
                    }

                    <div class="border-t pt-4">
                        <div class="flex justify-between items-center">
                            <span class="text-lg font-medium text-gray-600">Pago Total:</span>
                            <span class="text-2xl font-bold text-green-600">@Model.PagoTotal.ToString("C")</span>
                        </div>
                        <p class="text-xs text-gray-500 mt-1">Incluye salario base + promedio de bonificaciones</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Información de Seguimiento -->
        <div class="mt-6 bg-gray-50 rounded-lg p-6">
            <h4 class="text-lg font-medium text-gray-900 mb-4">
                <i class="fas fa-history mr-2"></i>Seguimiento de la Solicitud
            </h4>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                    <span class="text-sm font-medium text-gray-600">Fecha de Solicitud</span>
                    <p class="text-sm text-gray-900">@Model.FechaCreacion?.ToString("dd/MM/yyyy HH:mm")</p>
                </div>
                <div>
                    <span class="text-sm font-medium text-gray-600">Última Modificación</span>
                    <p class="text-sm text-gray-900">@Model.FechaModificacion?.ToString("dd/MM/yyyy HH:mm")</p>
                </div>
                <div>
                    <span class="text-sm font-medium text-gray-600">Estado Actual</span>
                    <p class="text-sm font-semibold text-gray-900">@Model.Estado?.ToUpper()</p>
                </div>
            </div>

            @if (Model.Estado == "aprobada" && enPeriodoVacaciones)
            {
                <div class="mt-4 p-3 bg-green-100 rounded-lg">
                    <p class="text-sm text-green-800">
                        <i class="fas fa-info-circle mr-2"></i>
                        El empleado está actualmente disfrutando de sus vacaciones.
                        Días transcurridos: @Math.Max(0, diasTranscurridos) de @Model.DiasTomados días.
                    </p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal para Rechazar -->
<div id="modalRechazo" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
        <h4 class="text-lg font-medium text-gray-900 mb-4">Rechazar Solicitud de Vacaciones</h4>

        <form asp-action="Rechazar" asp-route-id="@Model.Id" method="post">
            @Html.AntiForgeryToken()
            <div class="mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Motivo del Rechazo</label>
                <textarea name="motivo" rows="3" required
                          placeholder="Especifica el motivo del rechazo..."
                          class="block w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
            </div>

            <div class="flex justify-end space-x-3">
                <button type="button" onclick="cerrarModalRechazo()"
                        class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition duration-200">
                    Cancelar
                </button>
                <button type="submit"
                        class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition duration-200">
                    <i class="fas fa-times mr-2"></i>Rechazar
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function mostrarModalRechazo() {
        document.getElementById('modalRechazo').classList.remove('hidden');
    }

    function cerrarModalRechazo() {
        document.getElementById('modalRechazo').classList.add('hidden');
    }

    // Cerrar modal al hacer clic fuera
    document.getElementById('modalRechazo').addEventListener('click', function(e) {
        if (e.target === this) {
            cerrarModalRechazo();
        }
    });
</script>